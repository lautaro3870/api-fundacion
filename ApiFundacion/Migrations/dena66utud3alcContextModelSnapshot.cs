// <auto-generated />
using System;
using ApiFundacion.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ApiFundacion.Migrations
{
    [DbContext(typeof(dena66utud3alcContext))]
    partial class dena66utud3alcContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "en_US.UTF-8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ApiFundacion.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasComment("TRIAL")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool?>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Area1")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("area")
                        .HasComment("TRIAL");

                    b.Property<char?>("Trial059")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("trial059")
                        .HasComment("TRIAL");

                    b.HasKey("Id");

                    b.ToTable("areas");

                    b
                        .HasComment("TRIAL");
                });

            modelBuilder.Entity("ApiFundacion.Models.Areasxproyecto", b =>
                {
                    b.Property<int>("Idproyecto")
                        .HasColumnType("integer")
                        .HasColumnName("idproyecto")
                        .HasComment("TRIAL");

                    b.Property<int>("Idarea")
                        .HasColumnType("integer")
                        .HasColumnName("idarea")
                        .HasComment("TRIAL");

                    b.Property<char?>("Trial069")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("trial069")
                        .HasComment("TRIAL");

                    b.HasKey("Idproyecto", "Idarea")
                        .HasName("areasxproyecto$primarykey");

                    b.HasIndex(new[] { "Idarea" }, "areasxproyecto$idarea");

                    b.ToTable("areasxproyecto");

                    b
                        .HasComment("TRIAL");
                });

            modelBuilder.Entity("ApiFundacion.Models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasComment("TRIAL")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Departamento1")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("departamento")
                        .HasComment("TRIAL");

                    b.Property<char?>("Trial079")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("trial079")
                        .HasComment("TRIAL");

                    b.HasKey("Id");

                    b.ToTable("departamentos");

                    b
                        .HasComment("TRIAL");
                });

            modelBuilder.Entity("ApiFundacion.Models.Departamentosxproyecto", b =>
                {
                    b.Property<string>("Departamento")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("departamento")
                        .HasComment("TRIAL");

                    b.Property<int?>("Idproyecto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idproyecto")
                        .HasDefaultValueSql("0")
                        .HasComment("TRIAL");

                    b.Property<int?>("Nrodepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("nrodepartamento")
                        .HasDefaultValueSql("0")
                        .HasComment("TRIAL");

                    b.Property<char?>("Trial092")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("trial092")
                        .HasComment("TRIAL");

                    b.ToTable("departamentosxproyecto");

                    b
                        .HasComment("TRIAL");
                });

            modelBuilder.Entity("ApiFundacion.Models.Equipoxproyecto", b =>
                {
                    b.Property<int>("IdProyecto")
                        .HasColumnType("integer")
                        .HasColumnName("id_proyecto")
                        .HasComment("TRIAL");

                    b.Property<int>("IdPersonal")
                        .HasColumnType("integer")
                        .HasColumnName("id_personal")
                        .HasComment("TRIAL");

                    b.Property<bool?>("ConsultorAsociado")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Coordinador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasColumnName("coordinador")
                        .HasDefaultValueSql("false")
                        .HasComment("TRIAL");

                    b.Property<string>("FuncionTarea")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("funcion_tarea")
                        .HasComment("TRIAL");

                    b.Property<bool?>("Investigador")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("SsmaTimestamp")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("ssma_timestamp")
                        .HasComment("TRIAL");

                    b.Property<bool?>("SubCoordinador")
                        .HasColumnType("boolean");

                    b.Property<string>("Texto")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("texto")
                        .HasComment("TRIAL");

                    b.Property<char?>("Trial098")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("trial098")
                        .HasComment("TRIAL");

                    b.HasKey("IdProyecto", "IdPersonal")
                        .HasName("equipoxproyecto$primarykey");

                    b.HasIndex("IdPersonal");

                    b.ToTable("equipoxproyecto");

                    b
                        .HasComment("TRIAL");
                });

            modelBuilder.Entity("ApiFundacion.Models.Personal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasComment("TRIAL")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool?>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo")
                        .HasComment("TRIAL");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email")
                        .HasComment("TRIAL");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nombre")
                        .HasComment("TRIAL");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("password")
                        .HasComment("TRIAL");

                    b.Property<string>("Sector")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sector")
                        .HasComment("TRIAL");

                    b.Property<string>("Titulo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("titulo")
                        .HasComment("TRIAL");

                    b.Property<char?>("Trial105")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("trial105")
                        .HasComment("TRIAL");

                    b.HasKey("Id");

                    b.ToTable("personal");

                    b
                        .HasComment("TRIAL");
                });

            modelBuilder.Entity("ApiFundacion.Models.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasComment("TRIAL")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool?>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int?>("AnioFinalizacion")
                        .HasColumnType("integer")
                        .HasColumnName("anio_finalizacion")
                        .HasComment("TRIAL");

                    b.Property<int?>("AnioInicio")
                        .HasColumnType("integer")
                        .HasColumnName("anio_inicio")
                        .HasComment("TRIAL");

                    b.Property<bool?>("Certconformidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasColumnName("certconformidad")
                        .HasDefaultValueSql("false")
                        .HasComment("TRIAL");

                    b.Property<int?>("Certificadopor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("certificadopor")
                        .HasDefaultValueSql("0")
                        .HasComment("TRIAL");

                    b.Property<string>("Cita")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("cita")
                        .HasComment("TRIAL");

                    b.Property<string>("ConsultoresAsoc")
                        .HasColumnType("text")
                        .HasColumnName("consultores_asoc")
                        .HasComment("TRIAL");

                    b.Property<string>("Contratante")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("contratante")
                        .HasComment("TRIAL");

                    b.Property<bool?>("Convenio")
                        .HasColumnType("boolean")
                        .HasColumnName("convenio");

                    b.Property<string>("Departamento")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("departamento")
                        .HasComment("TRIAL");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion")
                        .HasComment("TRIAL");

                    b.Property<string>("Dirección")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("dirección")
                        .HasComment("TRIAL");

                    b.Property<bool?>("EnCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasColumnName("en_curso")
                        .HasDefaultValueSql("false")
                        .HasComment("TRIAL");

                    b.Property<bool?>("FichaLista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasColumnName("ficha_lista")
                        .HasDefaultValueSql("false")
                        .HasComment("TRIAL");

                    b.Property<string>("ISBN")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("isbn")
                        .HasComment("TRIAL");

                    b.Property<string>("ISSN")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("issn")
                        .HasComment("TRIAL");

                    b.Property<int?>("IdArea")
                        .HasColumnType("integer")
                        .HasColumnName("id_area")
                        .HasComment("TRIAL");

                    b.Property<string>("Link")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("link");

                    b.Property<int?>("MesFinalizacion")
                        .HasColumnType("integer")
                        .HasColumnName("mes_finalizacion")
                        .HasComment("TRIAL");

                    b.Property<int?>("MesInicio")
                        .HasColumnType("integer")
                        .HasColumnName("mes_inicio")
                        .HasComment("TRIAL");

                    b.Property<string>("Moneda")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("moneda")
                        .HasComment("TRIAL");

                    b.Property<string>("MontoContrato")
                        .HasColumnType("text")
                        .HasColumnName("monto_contrato")
                        .HasComment("TRIAL");

                    b.Property<string>("NroContrato")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nro_contrato")
                        .HasComment("TRIAL");

                    b.Property<string>("PaisRegion")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("pais-region")
                        .HasComment("TRIAL");

                    b.Property<string>("Resultados")
                        .HasColumnType("text")
                        .HasColumnName("resultados")
                        .HasComment("TRIAL");

                    b.Property<string>("Revista")
                        .HasColumnType("text");

                    b.Property<byte[]>("SsmaTimestamp")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("ssma_timestamp")
                        .HasComment("TRIAL");

                    b.Property<string>("Titulo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("titulo")
                        .HasComment("TRIAL");

                    b.Property<char?>("Trial118")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("trial118")
                        .HasComment("TRIAL");

                    b.Property<string>("pdf")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("pdf")
                        .HasComment("TRIAL");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdArea" }, "proyectos$id_area");

                    b.ToTable("proyectos");

                    b
                        .HasComment("TRIAL");
                });

            modelBuilder.Entity("ApiFundacion.Models.Publicacionesxproyecto", b =>
                {
                    b.Property<int>("IdPublicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_publicacion")
                        .HasComment("TRIAL")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Año")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("año")
                        .HasComment("TRIAL");

                    b.Property<string>("Codigobcs")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("codigobcs")
                        .HasComment("TRIAL");

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("integer")
                        .HasColumnName("id_proyecto")
                        .HasComment("TRIAL");

                    b.Property<string>("Medio")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("medio")
                        .HasComment("TRIAL");

                    b.Property<string>("Publicacion")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("publicacion")
                        .HasComment("TRIAL");

                    b.Property<char?>("Trial131")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("trial131")
                        .HasComment("TRIAL");

                    b.HasKey("IdPublicacion")
                        .HasName("publicacionesxproyecto$primarykey");

                    b.HasIndex(new[] { "IdProyecto" }, "publicacionesxproyecto$id_proyecto");

                    b.ToTable("publicacionesxproyecto");

                    b
                        .HasComment("TRIAL");
                });

            modelBuilder.Entity("ApiFundacion.Models.Sysdiagram", b =>
                {
                    b.Property<int>("DiagramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("diagram_id")
                        .HasComment("TRIAL")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("Definition")
                        .HasColumnType("bytea")
                        .HasColumnName("definition")
                        .HasComment("TRIAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("name")
                        .HasComment("TRIAL");

                    b.Property<int>("PrincipalId")
                        .HasColumnType("integer")
                        .HasColumnName("principal_id")
                        .HasComment("TRIAL");

                    b.Property<char?>("Trial141")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("trial141")
                        .HasComment("TRIAL");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version")
                        .HasComment("TRIAL");

                    b.HasKey("DiagramId")
                        .HasName("pk__sysdiagr__c2b05b61c61709e0");

                    b.HasIndex(new[] { "PrincipalId", "Name" }, "uk_principal_name")
                        .IsUnique();

                    b.ToTable("sysdiagrams");

                    b
                        .HasComment("TRIAL");
                });

            modelBuilder.Entity("ApiFundacion.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<bool?>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("ApiFundacion.Models.Validadore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasComment("TRIAL")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nombre")
                        .HasComment("TRIAL");

                    b.Property<string>("Sector")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sector")
                        .HasComment("TRIAL");

                    b.Property<string>("Titulo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("titulo")
                        .HasComment("TRIAL");

                    b.Property<char?>("Trial147")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("trial147")
                        .HasComment("TRIAL");

                    b.HasKey("Id");

                    b.ToTable("validadores");

                    b
                        .HasComment("TRIAL");
                });

            modelBuilder.Entity("ApiFundacion.Models.Areasxproyecto", b =>
                {
                    b.HasOne("ApiFundacion.Models.Area", "IdareaNavigation")
                        .WithMany("Areasxproyectos")
                        .HasForeignKey("Idarea")
                        .HasConstraintName("areasxproyecto$_c__database_proyectos_be_mdb__areasareasxproyec")
                        .IsRequired();

                    b.HasOne("ApiFundacion.Models.Proyecto", "IdproyectoNavigation")
                        .WithMany("Areasxproyectos")
                        .HasForeignKey("Idproyecto")
                        .HasConstraintName("areasxproyecto$_c__database_proyectos_be_mdb__proyectosareasxpr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdareaNavigation");

                    b.Navigation("IdproyectoNavigation");
                });

            modelBuilder.Entity("ApiFundacion.Models.Equipoxproyecto", b =>
                {
                    b.HasOne("ApiFundacion.Models.Personal", "IdPersonalNavigation")
                        .WithMany("Equipoxproyectos")
                        .HasForeignKey("IdPersonal")
                        .HasConstraintName("equipoxproyecto$_c__database_proyectos_be_mdb__personalequipoxp")
                        .IsRequired();

                    b.HasOne("ApiFundacion.Models.Proyecto", "IdProyectoNavigation")
                        .WithMany("Equipoxproyectos")
                        .HasForeignKey("IdProyecto")
                        .HasConstraintName("equipoxproyecto$_c__database_proyectos_be_mdb__proyectosequipox")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdPersonalNavigation");

                    b.Navigation("IdProyectoNavigation");
                });

            modelBuilder.Entity("ApiFundacion.Models.Publicacionesxproyecto", b =>
                {
                    b.HasOne("ApiFundacion.Models.Proyecto", "IdProyectoNavigation")
                        .WithMany("Publicacionesxproyectos")
                        .HasForeignKey("IdProyecto")
                        .HasConstraintName("publicacionesxproyecto$_c__database_proyectos_be_mdb__proyectos")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("IdProyectoNavigation");
                });

            modelBuilder.Entity("ApiFundacion.Models.Area", b =>
                {
                    b.Navigation("Areasxproyectos");
                });

            modelBuilder.Entity("ApiFundacion.Models.Personal", b =>
                {
                    b.Navigation("Equipoxproyectos");
                });

            modelBuilder.Entity("ApiFundacion.Models.Proyecto", b =>
                {
                    b.Navigation("Areasxproyectos");

                    b.Navigation("Equipoxproyectos");

                    b.Navigation("Publicacionesxproyectos");
                });
#pragma warning restore 612, 618
        }
    }
}
